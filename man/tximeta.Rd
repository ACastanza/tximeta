% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tximeta.R
\name{tximeta}
\alias{tximeta}
\title{tximeta: Transcript quantification import with automatic metadata}
\usage{
tximeta(coldata, type = "salmon", txOut = TRUE, skipMeta = FALSE,
  ...)
}
\arguments{
\item{coldata}{a data.frame with at least two columns (others will propogate to object):
\itemize{
\item{\code{files} - character, paths of quantification files}
\item{\code{names} - character, sample names}
}
if \code{coldata} is a vector, it is assumed to be the paths of quantification files
and unique sample names are created}

\item{type}{what quantifier was used (see \code{\link{tximport}})}

\item{txOut}{whether to output transcript-level data.
\code{tximeta} is designed to have transcript-level output
with Salmon or Sailfish, so default is \code{TRUE},
and it's recommended to use \code{\link{summarizeToGene}}
following \code{tximeta} for gene-level summarization.}

\item{skipMeta}{whether to skip metadata generation
(e.g. to avoid errors if not connected to internet).
This calls \code{tximport} directly and so either
\code{txOut=TRUE} or \code{tx2gene} should be specified.}

\item{...}{arguments passed to \code{tximport}}
}
\value{
a SummarizedExperiment with metadata on the \code{rowRanges}.
(if the hash signature in the Salmon or Sailfish index does not match
any known transcriptomes, or any locally saved \code{linkedTxome},
\code{tximeta} will just return a non-ranged SummarizedExperiment)
}
\description{
\code{tximeta} leverages the hash signature of the Salmon or Sailfish index,
in addition to a number of core Bioconductor packages (GenomicFeatures,
ensembldb, GenomeInfoDb, BiocFileCache) to automatically populate metadata
for the user, without additional effort from the user. Note that this package
is in "beta" / under development.
}
\details{
Most of the code in \code{tximeta} works to add metadata and transcript ranges
when the quantification was performed with Salmon or Sailfish. However,
\code{tximeta} can be used with any quantification \code{type} that is supported
by \code{\link{tximport}}, where it will return an un-ranged SummarizedExperiment.

\code{tximeta} checks the hash signature of the index against a database
of known transcriptomes (this database under construction) or a locally stored
\code{linkedTxome} (see \code{link{makeLinkedTxome}}), and then will
automatically populate, e.g. the transcript locations, the transcriptome release,
the genome with correct chromosome lengths, etc. It allows for automatic
and correct summarization of transcript-level quantifications to the gene-level
via \code{\link{summarizeToGene}} without the need to manually build
a \code{tx2gene} table.

\code{tximeta} on the first run will ask where the BiocFileCache for
this package should be kept, either using a default location or a temporary
directory. At any point, the user can specify a location using
\code{\link{setTximetaBFC}} and this choice will be saved for future sessions.
Multiple users can point to the same BiocFileCache, such that
transcript databases (TxDb) associated with certain Salmon or Sailfish indices
and \code{linkedTxomes} can be accessed by different users without additional
effort or time spent downloading/building the relevant TxDb.

In order to allow that multiple users can read and write to the
same location, one should set the BiocFileCache directory to
have group write permissions (g+w).
}
\examples{

# point to a Salmon quantification file:
dir <- system.file("extdata/salmon_dm", package="tximportData")
files <- file.path(dir, "SRR1197474_cdna", "quant.sf.gz") 
coldata <- data.frame(files, names="SRR1197474", condition="A", stringsAsFactors=FALSE)

# normally we would just run the following which would download the appropriate metadata
# se <- tximeta(coldata)

# for this example, we instead point to a local path where the GTF can be found
# by making a linkedTxome:
dir <- system.file("extdata", package="tximeta")
indexDir <- file.path(dir, "Drosophila_melanogaster.BDGP6.cdna.v92_salmon_0.10.2")
fastaFTP <- "ftp://ftp.ensembl.org/pub/release-92/fasta/drosophila_melanogaster/cdna/Drosophila_melanogaster.BDGP6.cdna.all.fa.gz"
dir2 <- system.file("extdata/salmon_dm", package="tximportData")
gtfPath <- file.path(dir2,"Drosophila_melanogaster.BDGP6.92.gtf.gz")
makeLinkedTxome(indexDir=indexDir, source="Ensembl", organism="Drosophila melanogaster",
                release="92", genome="BDGP6", fasta=fastaFTP, gtf=gtfPath, write=FALSE)
se <- tximeta(coldata)

# to clear the entire linkedTxome table
# (don't run unless you want to clear this table!)
# bfcloc <- getTximetaBFC()
# bfc <- BiocFileCache(bfcloc)
# bfcremove(bfc, bfcquery(bfc, "linkedTxomeTbl")$rid)

}
